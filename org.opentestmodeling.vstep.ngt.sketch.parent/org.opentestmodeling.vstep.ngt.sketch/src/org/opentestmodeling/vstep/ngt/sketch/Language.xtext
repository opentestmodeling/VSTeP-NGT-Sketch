grammar org.opentestmodeling.vstep.ngt.sketch.Language with org.eclipse.xtext.common.Terminals

generate language "http://www.opentestmodeling.org/vstep/ngt/sketch/Language"

Model:
    (imports += TopLevelImport)*
    (testElements += TestElement)*;

//
// Import external models.
//
TopLevelImport:
    'import' importURI = STRING;


//
// Test container related.
//
TestElement: NodeChain | TestContainer;

TestContainer:
    'container' name=ID_CONTAINER ( shortDesc = STRING )? '{'
        elements += TestElement ( elements += TestElement )*
    '}';


//
// Connection chain related.
//
TargetDefChain:
    def = TestTarget
    (connections += NodeConnection)*;

ViewpointDefChain:
    def = TestViewpoint
    (detail = ViewpointDetail)?
    (connections += NodeConnection)*;

TargetRefChain:
        ref = [TestTarget|ID_TARGET]
    (connections += NodeConnection)*;

ViewpointRefChain:
        ref = [TestViewpoint|ID_VIEWPOINT]
    (connections += NodeConnection)*;

ViewpointChain:
        ViewpointDefChain | '&' ViewpointRefChain;

NodeChain:
    TargetDefChain | ViewpointDefChain | '&' (TargetRefChain | ViewpointRefChain);


//
// Connection related.
//
NodeConnection: Inheritance | Relation | Dependency;

Inheritance:
    (name = '<|--' | name = '<|-' stereotype=ID_STEREOTYPE '-')
        (subChains += ViewpointChain | ( '+' subChains += ViewpointChain )+);

Relation:
    (name = '....' | name = '..' stereotype=ID_STEREOTYPE '..')
        (subChains += NodeChain | ( '+' subChains += NodeChain)+);

Dependency:
    (name = '<--' | name = '<-' stereotype=ID_STEREOTYPE '-')
        (subChains += NodeChain | ( '+' subChains += NodeChain )+);

//
// Node related.
//
TestTarget:
    name = ID_TARGET
    (
            ( stereotype = ID_STEREOTYPE )? &
            ( shortDesc = STRING )?
    );

TestViewpoint:
    name = ID_VIEWPOINT
    (
            ( stereotype = ID_STEREOTYPE )? &
            ( shortDesc = STRING)?
    );

ViewpointDetail: {ViewpointDetail} '{'
         ((testItems = ItemList)? &
          (qualityRisk = QualityRisk)? &
          (coverage = STRING)?
         )
'}';

ItemList:
    {ItemList} 'items' '{' elements += STRING (elements += STRING)* '}';

QualityRisk: {QualityRisk}
    'quality-risk' '{'
    (
            ('importance' '=' importance=INT)? &
              ('severity' '=' severity=INT)?
    )
    '}';

terminal ID_TARGET: '(' ( '\\' . | !('\\'|')') )+ ')';
terminal ID_VIEWPOINT: '[' ( '\\' . | !('\\'|']') )+ ']';
terminal ID_STEREOTYPE: '<<' ( '\\' . | !('\\'|'>') )+ '>>';
terminal ID_CONTAINER: (ID|'\u0080'..'\uFFFD');
